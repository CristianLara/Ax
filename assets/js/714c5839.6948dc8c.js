"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[259],{3857:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>x,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>a,toc:()=>o});var l=i(4848),n=i(8453),r=i(8987),s=i(1023);i(290);const d={title:"Hyperparameter Optimization on SLURM via SubmitIt",sidebar_label:"Hyperparameter Optimization on SLURM via SubmitIt"},h="Hyperparameter Optimization on Slurm via SubmitIt",a={id:"tutorials/submitit/index",title:"Hyperparameter Optimization on SLURM via SubmitIt",description:"<LinkButtons",source:"@site/../docs/tutorials/submitit/index.mdx",sourceDirName:"tutorials/submitit",slug:"/tutorials/submitit/",permalink:"/Ax/docs/tutorials/submitit/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Hyperparameter Optimization on SLURM via SubmitIt",sidebar_label:"Hyperparameter Optimization on SLURM via SubmitIt"},sidebar:"tutorials",previous:{title:"Hyperparameter Optimization for PyTorch",permalink:"/Ax/docs/tutorials/tune_cnn_service/"},next:{title:"Multi-Task Modeling",permalink:"/Ax/docs/tutorials/multi_task/"}},x={},o=[{value:"Importing Necessary Libraries",id:"importing-necessary-libraries",level:2},{value:"Defining the Function to Optimize",id:"defining-the-function-to-optimize",level:2},{value:"Setting up Ax",id:"setting-up-ax",level:2},{value:"Setting up SubmitIt",id:"setting-up-submitit",level:2},{value:"Running the Optimization Loop",id:"running-the-optimization-loop",level:2},{value:"Finally",id:"finally",level:2}];function c(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...t.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.A,{githubUrl:"",colabUrl:""}),"\n",(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"hyperparameter-optimization-on-slurm-via-submitit",children:"Hyperparameter Optimization on Slurm via SubmitIt"})}),"\n",(0,l.jsxs)(e.p,{children:["This notebook serves as a quickstart guide for using the Ax library with the SubmitIt\nlibrary in an ask-tell loop. ",(0,l.jsx)(e.a,{href:"https://github.com/facebookincubator/submitit/",children:"SubmitIt"}),"\nis a Python toolbox for submitting jobs to\n",(0,l.jsx)(e.a,{href:"https://slurm.schedmd.com/quickstart.html",children:"Slurm"}),"."]}),"\n",(0,l.jsx)(e.p,{children:"The notebook demonstrates how to use the Ax client in an ask-tell loop where each trial\nis scheduled to run on a Slurm cluster asynchronously."}),"\n",(0,l.jsx)(e.p,{children:"To use this script, run it on a slurm node either as an interactive notebook or export\nit as a Python script and run it as a Slurm job."}),"\n",(0,l.jsx)(e.h2,{id:"importing-necessary-libraries",children:"Importing Necessary Libraries"}),"\n",(0,l.jsx)(e.p,{children:"Let's start by importing the necessary libraries."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"import time\nfrom ax.service.ax_client import AxClient, ObjectiveProperties\nfrom ax.utils.notebook.plotting import render\nfrom ax.service.utils.report_utils import exp_to_df\nfrom submitit import AutoExecutor, LocalJob, DebugJob\n"})}),"\n",(0,l.jsx)(e.h2,{id:"defining-the-function-to-optimize",children:"Defining the Function to Optimize"}),"\n",(0,l.jsx)(e.p,{children:"We'll define a simple function to optimize. This function takes two parameters, and\nreturns a single metric."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:'def evaluate(parameters):\n    x = parameters["x"]\n    y = parameters["y"]\n    return {"result": (x - 3)**2 + (y - 4)**2}\n'})}),"\n",(0,l.jsxs)(e.p,{children:["Note: SubmitIt's\n",(0,l.jsx)(e.a,{href:"https://github.com/facebookincubator/submitit/blob/main/docs/examples.md#working-with-commands",children:"CommandFunction"}),"\nallows you to define commands to run on the node and then redirects the standard output."]}),"\n",(0,l.jsx)(e.h2,{id:"setting-up-ax",children:"Setting up Ax"}),"\n",(0,l.jsx)(e.p,{children:"We'll use Ax's Service API for this example. We start by initializing an AxClient and\ncreating an experiment."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:'ax_client = AxClient()\nax_client.create_experiment(\n    name="my_experiment",\n    parameters=[\n        {"name": "x", "type": "range", "bounds": [-10.0, 10.0]},\n        {"name": "y", "type": "range", "bounds": [-10.0, 10.0]},\n    ],\n    objectives={"result": ObjectiveProperties(minimize=True)},\n    parameter_constraints=["x + y <= 2.0"],  # Optional.\n)\n'})}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:57:00] ax.service.ax_client: Starting optimization with verbose logging. To disable logging, set the verbose_logging argument to False. Note that float values in the logs are rounded to 6 decimal points.\n[INFO 01-11 17:57:00] ax.service.utils.instantiation: Inferred value type of ParameterType.FLOAT for parameter x. If that is not the expected value type, you can explicitly specify 'value_type' ('int', 'float', 'bool' or 'str') in parameter dict.\n[INFO 01-11 17:57:00] ax.service.utils.instantiation: Inferred value type of ParameterType.FLOAT for parameter y. If that is not the expected value type, you can explicitly specify 'value_type' ('int', 'float', 'bool' or 'str') in parameter dict.\n[INFO 01-11 17:57:00] ax.service.utils.instantiation: Created search space: SearchSpace(parameters=[RangeParameter(name='x', parameter_type=FLOAT, range=[-10.0, 10.0]), RangeParameter(name='y', parameter_type=FLOAT, range=[-10.0, 10.0])], parameter_constraints=[ParameterConstraint(1.0*x + 1.0*y <= 2.0)]).\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: Using Models.BOTORCH_MODULAR since there are more ordered parameters than there are categories for the unordered categorical parameters.\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: Calculating the number of remaining initialization trials based on num_initialization_trials=None max_initialization_trials=None num_tunable_parameters=2 num_trials=None use_batch_trials=False\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: calculated num_initialization_trials=5\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: num_completed_initialization_trials=0 num_remaining_initialization_trials=5\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: verbose, disable_progbar, and jit_compile are not yet supported when using choose_generation_strategy with ModularBoTorchModel, dropping these arguments.\n[INFO 01-11 17:57:00] ax.modelbridge.dispatch_utils: Using Bayesian Optimization generation strategy: GenerationStrategy(name='Sobol+BoTorch', steps=[Sobol for 5 trials, BoTorch for subsequent trials]). Iterations after 5 will take longer to generate due to model-fitting."}),"\n",(0,l.jsxs)(e.p,{children:["Other commonly used ",(0,l.jsx)(e.a,{href:"https://ax.dev/docs/glossary.html#parameter",children:"parameters types"}),"\ninclude ",(0,l.jsx)(e.code,{children:"choice"})," parameters and ",(0,l.jsx)(e.code,{children:"fixed"})," parameters."]}),"\n",(0,l.jsxs)(e.p,{children:["Tip 1: you can specify additional information for parameters such as ",(0,l.jsx)(e.code,{children:"log_scale"}),", if a\nparameter operates at a log-scale and ",(0,l.jsx)(e.code,{children:"is_ordered"})," for choice parameters that have a\nmeaningful ordering."]}),"\n",(0,l.jsx)(e.p,{children:"Tip 2: Ax is an excellent choice for multi-objective optimization problems when there\nare multiple competing objectives and the goal is to find all Pareto-optimal solutions."}),"\n",(0,l.jsx)(e.p,{children:"Tip 3: One can define constraints on both the parameters and the outcome."}),"\n",(0,l.jsx)(e.h2,{id:"setting-up-submitit",children:"Setting up SubmitIt"}),"\n",(0,l.jsxs)(e.p,{children:["We'll use SubmitIt's ",(0,l.jsx)(e.code,{children:"AutoExecutor"})," for this example. We start by initializing an\n",(0,l.jsx)(e.code,{children:"AutoExecutor"}),", and setting a few commonly used parameters."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# Log folder and cluster. Specify cluster='local' or cluster='debug' to run the jobs locally during development.\n# When we're are ready for deployment, switch to cluster='slurm' \nexecutor = AutoExecutor(folder=\"/tmp/submitit_runs\", cluster='debug') \nexecutor.update_parameters(timeout_min=60) # Timeout of the slurm job. Not including slurm scheduling delay.\nexecutor.update_parameters(cpus_per_task=2)\n"})}),"\n",(0,l.jsxs)(e.p,{children:["Other commonly used Slurm parameters include ",(0,l.jsx)(e.code,{children:"partition"}),", ",(0,l.jsx)(e.code,{children:"ntasks_per_node"}),",\n",(0,l.jsx)(e.code,{children:"cpus_per_task"}),", ",(0,l.jsx)(e.code,{children:"cpus_per_gpu"}),", ",(0,l.jsx)(e.code,{children:"gpus_per_node"}),", ",(0,l.jsx)(e.code,{children:"gpus_per_task"}),", ",(0,l.jsx)(e.code,{children:"qos"}),", ",(0,l.jsx)(e.code,{children:"mem"}),",\n",(0,l.jsx)(e.code,{children:"mem_per_gpu"}),", ",(0,l.jsx)(e.code,{children:"mem_per_cpu"}),", ",(0,l.jsx)(e.code,{children:"account"}),"."]}),"\n",(0,l.jsx)(e.h2,{id:"running-the-optimization-loop",children:"Running the Optimization Loop"}),"\n",(0,l.jsx)(e.p,{children:"Now, we're ready to run the optimization loop. We'll use an ask-tell loop, where we ask\nAx for a suggestion, evaluate it using our function, and then tell Ax the result."}),"\n",(0,l.jsx)(e.p,{children:"The example loop schedules new jobs whenever there is availability. For tasks that take\na similar amount of time regardless of the parameters, it may make more sense to wait\nfor the whole batch to finish before scheduling the next (so ax can make better informed\nparameter choices)."}),"\n",(0,l.jsxs)(e.p,{children:["Note that ",(0,l.jsx)(e.code,{children:"get_next_trials"})," may not use all available ",(0,l.jsx)(e.code,{children:"num_parallel_jobs"})," if it doesn't\nhave good parameter candidates to run."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"total_budget = 10\nnum_parallel_jobs = 3\n\njobs = []\nsubmitted_jobs = 0\n# Run until all the jobs have finished and our budget is used up.\nwhile submitted_jobs < total_budget or jobs:\n    for job, trial_index in jobs[:]:\n        # Poll if any jobs completed\n        # Local and debug jobs don't run until .result() is called.\n        if job.done() or type(job) in [LocalJob, DebugJob]:\n            result = job.result()\n            ax_client.complete_trial(trial_index=trial_index, raw_data=result)\n            jobs.remove((job, trial_index))\n    \n    # Schedule new jobs if there is availablity\n    trial_index_to_param, _ = ax_client.get_next_trials(\n        max_trials=min(num_parallel_jobs - len(jobs), total_budget - submitted_jobs))\n    for trial_index, parameters in trial_index_to_param.items():\n        job = executor.submit(evaluate, parameters)\n        submitted_jobs += 1\n        jobs.append((job, trial_index))\n        time.sleep(1)\n    \n    # Display the current trials.\n    display(exp_to_df(ax_client.experiment))\n\n    # Sleep for a bit before checking the jobs again to avoid overloading the cluster. \n    # If you have a large number of jobs, consider adding a sleep statement in the job polling loop aswell.\n    time.sleep(30)\n"})}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:57:00] ax.service.ax_client: Generated new trial 0 with parameters {'x': -1.756784, 'y': -4.021679}.\n[INFO 01-11 17:57:00] ax.service.ax_client: Generated new trial 1 with parameters {'x': -9.300127, 'y': -4.654682}.\n[INFO 01-11 17:57:00] ax.service.ax_client: Generated new trial 2 with parameters {'x': 4.881288, 'y': -7.929573}."}),"\n",(0,l.jsx)(s.A,{children:"[WARNING 01-11 17:57:03] ax.service.utils.report_utils: Column reason missing for all trials. Not appending column.\n[INFO 01-11 17:57:03] ax.service.utils.report_utils: No results present for the specified metrics [Metric('result')]. Returning arm parameters and metadata only."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"right"}}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"trial_index"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"arm_name"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"trial_status"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"generation_method"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"x"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"y"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.75678"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.02168"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-9.30013"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.65468"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4.88129"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.92957"})]})]})]}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:57:33] ax.service.ax_client: Completed trial 0 with data: {'result': (86.974325, None)}.\n[INFO 01-11 17:57:33] ax.service.ax_client: Completed trial 1 with data: {'result': (226.196643, None)}.\n[INFO 01-11 17:57:33] ax.service.ax_client: Completed trial 2 with data: {'result': (145.853961, None)}.\n[INFO 01-11 17:57:33] ax.service.ax_client: Generated new trial 3 with parameters {'x': 2.752141, 'y': -8.223596}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[INFO 01-11 17:57:33] ax.service.ax_client: Generated new trial 4 with parameters {'x': 9.275037, 'y': -7.347285}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[WARNING 01-11 17:57:35] ax.service.utils.report_utils: Column reason missing for all trials. Not appending column."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"right"}}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"trial_index"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"arm_name"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"trial_status"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"generation_method"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"result"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"x"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"y"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"86.9743"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.75678"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.02168"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"226.197"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-9.30013"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.65468"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"145.854"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4.88129"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.92957"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2.75214"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-8.2236"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9.27504"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.34729"})]})]})]}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:58:05] ax.service.ax_client: Completed trial 3 with data: {'result': (149.477736, None)}.\n[INFO 01-11 17:58:05] ax.service.ax_client: Completed trial 4 with data: {'result': (168.136982, None)}.\n[INFO 01-11 17:58:11] ax.service.ax_client: Generated new trial 5 with parameters {'x': 0.590279, 'y': -1.398661}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[INFO 01-11 17:58:11] ax.modelbridge.torch: The observations are identical to the last set of observations used to fit the model. Skipping model fitting.\n[INFO 01-11 17:58:17] ax.service.ax_client: Generated new trial 6 with parameters {'x': -2.248477, 'y': 1.686329}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[INFO 01-11 17:58:17] ax.modelbridge.torch: The observations are identical to the last set of observations used to fit the model. Skipping model fitting.\n[INFO 01-11 17:58:23] ax.service.ax_client: Generated new trial 7 with parameters {'x': 1.439472, 'y': -3.621688}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[WARNING 01-11 17:58:26] ax.service.utils.report_utils: Column reason missing for all trials. Not appending column."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"right"}}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"trial_index"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"arm_name"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"trial_status"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"generation_method"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"result"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"x"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"y"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"86.9743"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.75678"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.02168"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"226.197"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-9.30013"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.65468"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"145.854"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4.88129"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.92957"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"149.478"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2.75214"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-8.2236"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"168.137"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9.27504"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.34729"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.590279"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.39866"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-2.24848"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.68633"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.43947"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-3.62169"})]})]})]}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:58:56] ax.service.ax_client: Completed trial 5 with data: {'result': (34.952299, None)}.\n[INFO 01-11 17:58:56] ax.service.ax_client: Completed trial 6 with data: {'result': (32.899584, None)}.\n[INFO 01-11 17:58:56] ax.service.ax_client: Completed trial 7 with data: {'result': (60.525376, None)}.\n[INFO 01-11 17:59:03] ax.service.ax_client: Generated new trial 8 with parameters {'x': 0.308729, 'y': 1.691271}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[INFO 01-11 17:59:03] ax.modelbridge.torch: The observations are identical to the last set of observations used to fit the model. Skipping model fitting.\n[INFO 01-11 17:59:09] ax.service.ax_client: Generated new trial 9 with parameters {'x': 0.3043, 'y': 1.6957}.\n/private/home/marton/miniconda3/envs/axenv/lib/python3.10/site-packages/ax/core/data.py:284: FutureWarning:\nThe behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n[WARNING 01-11 17:59:11] ax.service.utils.report_utils: Column reason missing for all trials. Not appending column."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"right"}}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"trial_index"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"arm_name"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"trial_status"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"generation_method"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"result"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"x"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"y"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"86.9743"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.75678"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.02168"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"226.197"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-9.30013"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.65468"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"145.854"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4.88129"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.92957"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"149.478"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2.75214"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-8.2236"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"168.137"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9.27504"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.34729"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"34.9523"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.590279"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.39866"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"32.8996"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-2.24848"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.68633"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"60.5254"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.43947"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-3.62169"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.308729"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.69127"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"RUNNING"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"nan"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.3043"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.6957"})]})]})]}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 17:59:41] ax.service.ax_client: Completed trial 8 with data: {'result': (12.573169, None)}.\n[INFO 01-11 17:59:41] ax.service.ax_client: Completed trial 9 with data: {'result': (12.576597, None)}.\n[WARNING 01-11 17:59:41] ax.service.utils.report_utils: Column reason missing for all trials. Not appending column."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"right"}}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"trial_index"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"arm_name"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"trial_status"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"generation_method"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"result"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"x"}),(0,l.jsx)(e.th,{style:{textAlign:"right"},children:"y"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"86.9743"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.75678"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.02168"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"226.197"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-9.30013"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-4.65468"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"145.854"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4.88129"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.92957"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"3_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"149.478"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"2.75214"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-8.2236"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"4_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Sobol"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"168.137"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9.27504"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-7.34729"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"5_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"34.9523"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.590279"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-1.39866"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"6_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"32.8996"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-2.24848"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.68633"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"7_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"60.5254"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.43947"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"-3.62169"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"8_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"12.5732"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.308729"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.69127"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"9_0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"COMPLETED"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"BoTorch"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"12.5766"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"0.3043"}),(0,l.jsx)(e.td,{style:{textAlign:"right"},children:"1.6957"})]})]})]}),"\n",(0,l.jsx)(e.h2,{id:"finally",children:"Finally"}),"\n",(0,l.jsx)(e.p,{children:"We can retrieve the best parameters and render the response surface."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"best_parameters, (means, covariances) = ax_client.get_best_parameters()\nprint(f'Best set of parameters: {best_parameters}')\nprint(f'Mean objective value: {means}')\n# The covariance is only meaningful when multiple objectives are present.\n\nrender(ax_client.get_contour_plot())\n\n"})}),"\n",(0,l.jsx)(s.A,{children:"[INFO 01-11 18:00:11] ax.service.ax_client: Retrieving contour plot with parameter 'x' on X-axis and 'y' on Y-axis, for metric 'result'. Remaining parameters are affixed to the middle of their range."}),"\n",(0,l.jsx)(s.A,{children:"Best set of parameters: {'x': -2.2484768683250875, 'y': 1.6863286966529074}\nMean objective value: {'result': 32.90128530853501}"})]})}function g(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,l.jsx)(e,{...t,children:(0,l.jsx)(c,{...t})}):c(t)}},1023:(t,e,i)=>{i.d(e,{A:()=>g});i(6540);var l,n=new Uint8Array(16);function r(){if(!l&&!(l="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return l(n)}const s=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const d=function(t){return"string"==typeof t&&s.test(t)};for(var h=[],a=0;a<256;++a)h.push((a+256).toString(16).substr(1));const x=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=(h[t[e+0]]+h[t[e+1]]+h[t[e+2]]+h[t[e+3]]+"-"+h[t[e+4]]+h[t[e+5]]+"-"+h[t[e+6]]+h[t[e+7]]+"-"+h[t[e+8]]+h[t[e+9]]+"-"+h[t[e+10]]+h[t[e+11]]+h[t[e+12]]+h[t[e+13]]+h[t[e+14]]+h[t[e+15]]).toLowerCase();if(!d(i))throw TypeError("Stringified UUID is invalid");return i};const o=function(t,e,i){var l=(t=t||{}).random||(t.rng||r)();if(l[6]=15&l[6]|64,l[8]=63&l[8]|128,e){i=i||0;for(var n=0;n<16;++n)e[i+n]=l[n];return e}return x(l)};var c=i(4848);const g=function(t){return(0,c.jsxs)("div",{style:{backgroundColor:"lightgray",marginBottom:"var(--ifm-leading)",borderRadius:"var(--ifm-global-radius)",boxShadow:"var(--ifm-global-shadow-lw)",overflow:"hidden",padding:"10px",font:"var(--ifm-code-font-size) / var(--ifm-pre-line-height) var(--ifm-font-family-monospace)"},children:[(0,c.jsx)("span",{style:{color:"red"},children:"Out: "}),(0,c.jsx)("pre",{style:{margin:"0px",backgroundColor:"inherit"},children:t.children.split("\n").map((function(t){return(0,c.jsx)("p",{style:{marginBottom:"0px"},children:t},o())}))})]})}},8987:(t,e,i)=>{i.d(e,{A:()=>r});i(6540);var l=i(8774),n=i(4848);const r=function(t){var e=t.githubUrl,i=t.colabUrl;return(0,n.jsxs)("div",{className:"link-buttons",children:[(0,n.jsx)(l.A,{to:e,children:"Open in GitHub"}),(0,n.jsx)("div",{}),(0,n.jsx)(l.A,{to:i,children:"Run in Google Colab"})]})}},290:(t,e,i)=>{i(6540);var l=i(3259),n=i.n(l),r=(i(2303),i(4848));n()({loader:function(){return i.e(236).then(i.bind(i,1236))},loading:function(t){return t.timedOut?(0,r.jsx)("blockquote",{children:"Error: Loading Plotly timed out."}):(0,r.jsx)("div",{children:"loading..."})},timeout:1e4})},8453:(t,e,i)=>{i.d(e,{R:()=>s,x:()=>d});var l=i(6540);const n={},r=l.createContext(n);function s(t){const e=l.useContext(r);return l.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),l.createElement(r.Provider,{value:e},t.children)}}}]);
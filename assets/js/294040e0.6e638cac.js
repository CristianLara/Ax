"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[459],{37:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Why Ax?","href":"/Ax/docs/why-ax","docId":"why-ax","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/Ax/docs/installation","docId":"installation","unlisted":false},{"type":"link","label":"APIs","href":"/Ax/docs/api","docId":"api","unlisted":false},{"type":"link","label":"Glossary","href":"/Ax/docs/glossary","docId":"glossary","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Algorithms","items":[{"type":"link","label":"Bayesian Optimization","href":"/Ax/docs/bayesopt","docId":"bayesopt","unlisted":false},{"type":"link","label":"Bandit Optimization","href":"/Ax/docs/banditopt","docId":"banditopt","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Components","items":[{"type":"link","label":"Core","href":"/Ax/docs/core","docId":"core","unlisted":false},{"type":"link","label":"Trial Evaluation","href":"/Ax/docs/trial-evaluation","docId":"trial-evaluation","unlisted":false},{"type":"link","label":"Data","href":"/Ax/docs/data","docId":"data","unlisted":false},{"type":"link","label":"Models","href":"/Ax/docs/models","docId":"models","unlisted":false},{"type":"link","label":"Storage","href":"/Ax/docs/storage","docId":"storage","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"algo-overview":{"id":"algo-overview","title":"Overview","description":"Ax supports:"},"api":{"id":"api","title":"APIs","description":"The modular design of Ax enables three different usage modes, with different","sidebar":"docs"},"banditopt":{"id":"banditopt","title":"Bandit Optimization","description":"Many decision problems require choosing from a discrete set of candidates, and for these problems Ax uses bandit optimization. In contrast to Bayesian optimization \u2014 which provides a solution for problems with continuous parameters and an infinite number of potential options \u2014 bandit optimization is used for problems with a finite set of choices. Most ordinary A/B tests, in which a handful of options are evaluated against each other, fall into this category. Experimenters typically perform such tests by allocating a fixed percentage of experimental units to each choice, waiting to collect data about each, and then choosing a winner. In the case of an online system receiving incoming requests, this can be done by splitting traffic amongst the choices. However, with more than just a few options A/B tests quickly become prohibitively resource-intensive, largely because all choices \u2014 no matter how good or bad they appear \u2014 receive the same traffic allocation.","sidebar":"docs"},"bayesopt":{"id":"bayesopt","title":"Bayesian Optimization","description":"In complex engineering problems we often come across parameters that have to be tuned using several time-consuming and noisy evaluations. When the number of parameters is not small or some of the parameters are continuous, using large factorial designs (e.g., \u201cgrid search\u201d) or global optimization techniques for optimization require more evaluations than is practically feasible. These types of problems show up in a diversity of applications, such as","sidebar":"docs"},"core":{"id":"core","title":"Core","description":"Overview","sidebar":"docs"},"data":{"id":"data","title":"Data","description":"Fetching Data","sidebar":"docs"},"glossary":{"id":"glossary","title":"Glossary","description":"Arm","sidebar":"docs"},"installation":{"id":"installation","title":"Installation","description":"Requirements","sidebar":"docs"},"models":{"id":"models","title":"Models","description":"Using models in Ax","sidebar":"docs"},"storage":{"id":"storage","title":"Storage","description":"Ax has extensible support for saving and loading experiments in both JSON and SQL. The former is a good option for users who prefer lightweight, transportable storage, and the latter is better suited to production applications requiring a centralized, high-performance database.","sidebar":"docs"},"trial-evaluation":{"id":"trial-evaluation","title":"Trial Evaluation","description":"There are 3 paradigms for evaluating trials in Ax. Note:","sidebar":"docs"},"why-ax":{"id":"why-ax","title":"Why Ax?","description":"Developers and researchers alike face problems which confront them with a large space of possible ways to configure something \u2013\u2013 whether those are \\"magic numbers\\" used for infrastructure or compiler flags, learning rates or other hyperparameters in machine learning, or images and calls-to-action used in marketing promotions.  Selecting and tuning these configurations can often take time, resources, and can affect the quality of user experiences.  Ax is a machine learning system to help automate this process, so that researchers and developers can determine how to get the most out of their software in an optimally efficient way.","sidebar":"docs"}}}}')}}]);